Q1: Why might be consider using git?

Answer: Git is an extremely useful version control system which all programmers
        should use to keep track of their coding projects. With git, you can keep 
        track of the history of your coding project and what changes you have made
        and when. This is especially useful with large projects in which a small 
        change may break a few things or cause cascading errors. Git keeps a log 
        of all your committed changes and ensures you can retrieve an older 
        version of the project. Additionally, git also allows you to collaborate
        with other team members, such that each member has a local copy of the 
	project on their machines, and can push, pull, and merge changes once 
	they are done with a part/section of the work.

Q2: What field could data science be applied to? Give and Example and how it
    might help.

Answer: Data science can be applied to various fields, such as healthcare.
        For example, data science techniques can analyze patient records, 
        medical images, and genetic data to predict disease risk, personalize 
        treatments, and improve patient outcomes. By identifying patterns 
        and correlations in vast amounts of healthcare data, data science 
        can help healthcare providers make more informed decisions, optimize 
        resource allocation, and enhance the overall quality of care.

Q3: What is the difference between merging and rebasing?

Answer: Merging preserves the history of both branches, showing where
        they diverged and then rejoined. This creates a complete record but
        can lead to a complex history with many merge points, especially in 
        active projects. Merging is generally preferred for shared branches 
        or when maintaining a clear history of individual contributions is 
        crucial.
        Rebasing is like picking up a series of commits and placing them on 
        a different foundation. It rewrites history to make it look like the 
        feature branch was developed directly on top of the target branch, 
        resulting in a cleaner, linear history. However, this rewriting can 
        be risky for shared branches and might obscure the actual development 
        context. Rebasing is often favored for personal branches or when a 
        streamlined commit history is prioritized.

Q4: What skills do you hope to improve during this course?

Answer: Iâ€™m hoping to learn and become proficient with the following skills: 
        Data Science, Git, Pandas, Database, SQL, Probability, 
        Data Visualization, Data Exploration, Machine Learning, 
        Classifications, Decision Trees, Regression, Feature Engineering, 
        Neural Networks, Image Processing, Natural Language Processing (NLP)
